/*****************************************
 * 
 * Project: Cube Application Heine
 * Package Type: JSF Online Module: Page bean
 * Create by: amao.xu@altran.com
 * Date: 10.06.2013
 *
 *****************************************/
package de.heine.cube.online.pagebean;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

import org.apache.log4j.Logger;

import de.heine.cube.common.api.LocationService;
import de.heine.cube.common.api.PatientService;
import de.heine.cube.common.dto.ImageVO;
import de.heine.cube.common.dto.LocationVO;
import de.heine.cube.common.dto.PatientVO;
import de.heine.cube.common.exception.ServiceException;
import de.heine.cube.common.exception.SystemException;
import de.heine.cube.online.component.AbstractViewScopeBean;
import de.heine.cube.online.component.ConnectionService;
import de.heine.cube.online.component.dataModel.PatientPageDateModel;
import de.heine.cube.online.component.exception.ExceptionHandler;

/**
 * HomePatientOverviewBean
 * 
 * @author axu
 * 
 */
@ManagedBean
@SessionScoped
public class HomePatientOverviewBean extends AbstractViewScopeBean<PatientService> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 752852860721246189L;

	private static final Logger log = Logger
			.getLogger(HomePatientOverviewBean.class.getName());

	private LocationService locationservice;
	
	private PatientPageDateModel patientDateModel;

	/**
	 * 1.) Init Service: LocationService and PatientService
	 * 2.) Check if there is current patient in session
	 * 3.) get current Patient from session
	 * 4.) load location list
	 * 5.) load image list
	 * 
	 */
	public HomePatientOverviewBean() {
		super(PatientService.class);
		try {
		locationservice = ConnectionService.getService(LocationService.class);
		patientDateModel = new PatientPageDateModel();
		
		PatientVO currentPatient= sessionBean.getCurrentPatient();
		
		if(currentPatient==null){
			FacesContext.getCurrentInstance().getExternalContext().redirect("HomePatientOverview.xhtml");
		}else{
			patientDateModel.setCorrentPatient(currentPatient);
		}
		
		List<LocationVO> list = locationservice.getAllLocationsForPatient(currentPatient.getID_Patient());
		List<ImageVO> imageList = new ArrayList<ImageVO>();
		
		for(LocationVO location : list){
			List<ImageVO> temList = locationservice.getLocationImages(location);
			imageList.addAll(temList);
		}
		
		patientDateModel.setLocationList(list);
		patientDateModel.setImageList(imageList);
		
		} catch ( ServiceException  e) {
			//ExceptionHandler.serviceError(e);
		} catch (IOException |SystemException e) {
			//ExceptionHandler.systemError(e);
		}
	}

	public PatientPageDateModel getDateModel(){
		return patientDateModel;
	}
	
	public void saveCurrentPatient(ActionEvent actionEvent){
		sessionBean.setCurrentPatient(this.getDateModel().getCorrentPatient());
		int userId = sessionBean.getLogin().getId();
		try {
			log.info("current user ID from session is "+ userId);
			service.editPatient(getDateModel().getCorrentPatient(), userId);
		} catch (ServiceException e) {
			//e.printStackTrace();
		} catch (SystemException e) {
			//e.printStackTrace();
		}
	}
}