/*****************************************
 * 
 * Project: Cube Application Heine
 * Package Type: JSF Online Module
 * Create by: amao.xu@altran.com
 * Date: 10.06.2013
 *
 *****************************************/
package de.heine.cube.online.pagebean;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;
import javax.naming.NamingException;

import org.apache.log4j.Logger;
import org.primefaces.context.RequestContext;

import de.heine.cube.common.LanguageDict;
import de.heine.cube.common.api.UserService;
import de.heine.cube.common.dto.UserVO;
import de.heine.cube.common.exception.ServiceException;
import de.heine.cube.common.exception.SystemException;
import de.heine.cube.online.component.AbstractBean;
import de.heine.cube.online.component.exception.ExceptionHandler;
import de.heine.cube.online.sessionbean.SessionScopeBean;
import de.heine.cube.onlineMock.UserServiceMock;

/**
 * Login Bean
 * 
 * @author ALTRAN
 * 
 */
@ManagedBean
@ViewScoped
public class LoginBean extends AbstractBean<UserService> {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6855707619823214759L;
	
	private static final Logger log = Logger.getLogger(LoginBean.class.getName());
	
	
	/**
	 * UserService is the ServiceInterface for Login Page
	 */
	public LoginBean(){
		super(UserService.class);
	}
	
	private String username;
	private String password;

	@ManagedProperty(value="#{sessionBean}")
	private SessionScopeBean sessionBean;
	
	
	/**
	 * @return the username
	 */
	public String getUsername() {
		return username;
	}

	/**
	 * @param username
	 *            the username to set
	 */
	public void setUsername(String username) {
		this.username = username;
	}

	/**
	 * @return the password
	 */
	public String getPassword() {
		return password;
	}

	/**
	 * @param password
	 *            the password to set
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * 
	 * @param actionEvent
	 * @throws NamingException
	 */
	public void login(ActionEvent actionEvent) throws NamingException {  
	        RequestContext context = RequestContext.getCurrentInstance();  
	        FacesMessage msg = null;  
	        boolean loggedIn = false;
	        
	        try {
				UserVO user = service.loginUser(username, password);
				if(user!=null){
					loggedIn = true;
				}
			} catch (ServiceException e) {
				loggedIn = false;
				//handle Exception
			} catch (SystemException e) {
				ExceptionHandler.systemError(e);
			}
	        
	        if(loggedIn) {  
	            String welcome = msgBundle.getString(LanguageDict.LOGIN_MSG_WELCOME);
	            msg = new FacesMessage(FacesMessage.SEVERITY_INFO, welcome, username);  
		        context.addCallbackParam("url", conf.getString("url"));  
		        sessionBean.setLogin(username);
	        } else {  
	        	String error = msgBundle.getString(LanguageDict.LOGIN_MSG_ERROR);
	        	String invalid = msgBundle.getString(LanguageDict.LOGIN_MSG_INVALID);
	        	msg = new FacesMessage(FacesMessage.SEVERITY_WARN, error, invalid);  
	        }  
	        
	          
	        FacesContext.getCurrentInstance().addMessage(null, msg);  
	        context.addCallbackParam("loggedIn", loggedIn);  
	 }

	/**
	 * @return the sessionBean
	 */
	public SessionScopeBean getSessionBean() {
		return sessionBean;
	}

	/**
	 * @param sessionBean the sessionBean to set
	 */
	public void setSessionBean(SessionScopeBean sessionBean) {
		this.sessionBean = sessionBean;
	}
	
	
}